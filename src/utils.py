"""
‚öôÔ∏è TGBot-for-Orders - Created by Marc ‚öôÔ∏è

üìÑ License: Custom License Agreement
Copyright ¬© 2025 Marc. All rights reserved.

üö´ Unauthorized use, copying, modification, or distribution of this software is strictly prohibited.
‚ùó Violators will be prosecuted under international copyright law.

‚ö†Ô∏è WARNING: Misuse of this code will lead to legal action. Unauthorized users may face endless debugging hell.

üîí By using this software, you agree to these terms.
"""


# === UTILS ===
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–∞
# –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
from PIL import Image
import requests
from io import BytesIO
from telebot import types
import os
import csv

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–∞
def send_resized_photo(bot, chat_id, image_url, caption):
    try:
        response = requests.get(image_url, timeout=5)
        response.raise_for_status()
        image = Image.open(BytesIO(response.content))

        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç JPEG
        image = image.convert("RGB")
        image = image.resize((512, 512))

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        temp_file_path = f"temp_{chat_id}.jpg"
        image.save(temp_file_path, format="JPEG")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        with open(temp_file_path, 'rb') as photo:
            bot.send_photo(chat_id, photo, caption=caption)

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        os.remove(temp_file_path)
    except Exception as e:
        bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø–æ –æ–¥–Ω–æ–º—É (–∫–∞–∂–¥–∞—è –º–æ–¥–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
def send_catalog_individual(bot, chat_id, catalog):
    try:
        for size, models in catalog.items():
            bot.send_message(chat_id, f"üîπ *–†–∞–∑–º–µ—Ä: {size}*", parse_mode="Markdown")
            for model in models:
                send_resized_photo(
                    bot,
                    chat_id,
                    model['image_url'],
                    f"üß∏ {model['name']}\nüí∞ –¶–µ–Ω–∞: {model['price']} EUR"
                )
    except Exception as e:
        bot.send_message(chat_id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# Function to save order to CSV
def save_order_to_csv(order):
    file_path = "orders.csv"
    header = ["Surname", "Name", "Phone Number", "Pickup Location", "Model", "Price"]

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
        file_exists = os.path.isfile(file_path)

        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —Ñ–∞–π–ª
        with open(file_path, mode="a", newline="") as file:
            writer = csv.writer(file)
            if not file_exists:
                writer.writerow(header)  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–æ–≤—ã–π
            writer.writerow([
                order['surname'],
                order['name'],
                order['phone_number'],
                order['pickup_location'],
                order['model']['name'],
                order['model']['price']
            ])
    except Exception as e:
        print(f"Error writing to CSV: {e}")
